a:4:{s:5:"child";a:1:{s:0:"";a:1:{s:3:"rss";a:1:{i:0;a:6:{s:4:"data";s:1:" ";s:7:"attribs";a:1:{s:0:"";a:1:{s:7:"version";s:3:"2.0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:1:{s:7:"channel";a:1:{i:0;a:6:{s:4:"data";s:23:"                       ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:12:"Friendly Bit";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:22:"http://friendlybit.com";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:175:"You have found Friendly Bit, a web development blog. I focus on client side technologies like CSS, HTML and Javascript. You find my articles below and categories to the right.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:13:"lastBuildDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 08 Feb 2011 23:43:27 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"language";a:1:{i:0;a:5:{s:4:"data";s:2:"en";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"generator";a:1:{i:0;a:5:{s:4:"data";s:29:"http://wordpress.org/?v=3.0.5";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"item";a:15:{i:0;a:6:{s:4:"data";s:9:"         ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:20:"Will newspapers die?";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:54:"http://friendlybit.com/modern-web/will-newspapers-die/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:63:"http://friendlybit.com/modern-web/will-newspapers-die/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 08 Feb 2011 23:41:17 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:10:"Modern web";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=668";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:320:"A journalism student in Toronto, Canada, asked me some questions via e-mail about my old article about newspapers and online reading. Instead of just sending an e-mail out in the void I thought I&#8217;d persist my answers here: 1. Do you think it would be best for newspaper publications to get rid of their print [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:2308:"<p>A journalism student in Toronto, Canada, asked me some questions via e-mail about my old article about <a
href="/modern-web/why-people-skip-newspapers-and-read-news-on-the-web-instead/">newspapers and online reading</a>. Instead of just sending an e-mail out in the void I thought I&#8217;d persist my answers here:</p><blockquote><p>1. Do you think it would be best for newspaper publications to get rid of their print and go strictly online only? Why or why not?</p></blockquote><p>I think they should keep their print papers for a while longer. It&#8217;s a simple question of profit and catering to what users want. If you have thousands of users that want their paper, and it&#8217;s economically justifiable, just keep it.</p><p>The tricky part is determining how much loss in paper subscribers you should tolerate before shutting down the huge printing presses. I have no good answer to that other than to know your numbers. Paper profit needs to cover paper printing and distribution. Journalism costs can be split between channels. Do the math.</p><blockquote><p>2. Many people believe newspapers are dying and eventually will no longer exist. What are your thoughts on this?</p></blockquote><p>I think they will persist, just not their paper versions. Many of them are looking at dwindling subscription numbers, year after year, and are trying to figure out what to do. How do you move to the digital worlds while keeping quality, relevance, and profit.</p><p>The iPad is one way to get people to pay for news again, and some newspapers are seeing success doing that. Over a longer haul just the iPad won&#8217;t be enough, you need to be able to deliver your news to wherever your customers want them. Generally, this means being able to get your content on all kinds of devices, both mobile and desktop. The only format that can really do that, and still deliver a somewhat consistent design across devices, is HTML and CSS. Building one native app for each platform is just not worth it.</p><p>So it&#8217;s simple really: newspapers that figure out how to transition to digital (while still getting paid enough to afford quality journalism) will persist, all others will (slowly) die. This means an end to both paper-only newspapers, and those that fail to find the right payment model.</p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:59:"http://friendlybit.com/modern-web/will-newspapers-die/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:1;a:6:{s:4:"data";s:9:"         ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:22:"HTML5 is not an option";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:51:"http://friendlybit.com/html/html5-is-not-an-option/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:60:"http://friendlybit.com/html/html5-is-not-an-option/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 03 Nov 2010 19:20:42 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:4:"HTML";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=648";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:327:"HTML5 is HOT! Developers all over the world are adapting their sites, browsers are catching up, and new fallback solutions are released every day. But many developers misunderstand one thing: You can&#8217;t choose to use HTML5 or not, your site will be parsed as HTML5 no matter what. The reason is simple, HTML5 is made [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:1278:"<p>HTML5 is HOT! Developers all over the world are adapting their sites, browsers are catching up, and new fallback solutions are released every day. But many developers misunderstand one thing:</p><blockquote><p><strong>You can&#8217;t choose to use HTML5 or not, your site will be parsed as HTML5 no matter what.</strong></p></blockquote><p><img
class="alignnone size-full wp-image-656" title="no-choice" src="http://friendlybit.com/wp-content/uploads/2010/11/no-choice-e1288811809935.jpg" alt="Voting is pointless. I am your leader now. It is useless to resist me." style="max-width: 100%" /></p><p>The reason is simple, HTML5 is made to be backwards compatible with the current web, so browsers don&#8217;t need to keep their current parsers. All of them have soon switched to HTML5 parsers. You want to continue using HTML4? Not possible.</p><p>Now. You <strong>can </strong>choose whether you want to use the new features or not: New semantic tags, Microdata attributes, new form field types, accessibility features, 10-15 new JavaScript API:s (depending on how you count). Lots of new interesting stuff to learn.</p><p>So, go read up on HTML5 if you haven&#8217;t already, but don&#8217;t think you can keep using HTML4. Your site is being switched over as we speak.</p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:56:"http://friendlybit.com/html/html5-is-not-an-option/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:2:"12";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:2;a:6:{s:4:"data";s:9:"         ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:35:"Lazy Loading Asyncronous Javascript";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:62:"http://friendlybit.com/js/lazy-loading-asyncronous-javascript/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:71:"http://friendlybit.com/js/lazy-loading-asyncronous-javascript/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 07 May 2010 22:15:06 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:2:"JS";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=613";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:343:"Like many of you might know, I&#8217;m working on a site called Kundo with a couple of friends. It&#8217;s kinda like a Swedish version of Getsatisfaction, which means we have a javascript snippet that people add to their site to get feedback functionality. Cut-and-paste instead of writing the code yourself. Simple. The problem is, how [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:8655:"<p>Like many of you might know, I&#8217;m working on a site called <a
href="http://kundo.se">Kundo</a> with a couple of friends. It&#8217;s kinda like a Swedish version of <a
href="http://getsatisfaction.com/">Getsatisfaction</a>, which means we have a javascript snippet that people add to their site to get feedback functionality. Cut-and-paste instead of writing the code yourself. Simple.</p><p>The problem is, how do you load an external javascript with minimal impact on your customer&#8217;s sites? Here are my requirements:</p><ol><li><strong>Small</strong>. I don&#8217;t want a big mess for them to include on their sites. 10-15 lines, tops.</li><li><strong>Stand-alone</strong>. The environment is unknown, so we can&#8217;t rely on any external dependencies, like javascript libraries.</li><li><strong>Cross-browser</strong>. I have no idea what browsers my customer&#8217;s customers have, so I can&#8217;t do anything modern or fancy that isn&#8217;t backwards compatible. I assume at least IE6 and up though.</li><li><strong>Asynchronous download</strong>. The download of my script should not block the download of any script on their sites.</li><li><strong>Lazy Loading</strong>. If my site is temporarily slow, I don&#8217;t want to block the onload event from triggering until after our site responds.</li><li><strong>Preserve events</strong>. Any events used should not override any events on the customer&#8217;s site. Minimal impact, like I said.</li><li><strong>Don&#8217;t pollute namespace</strong>. Global variables should be avoided, since they could conflict with existing javascript.</li></ol><p>Note: I did not make all of this up myself. Lots of people did, I&#8217;m just writing it down for you. Thanks: <a
href="http://lillbra.se">Jonatan</a>, <a
href="http://stevenbenner.com/">Steven</a>, <a
href="http://fleecelabs.se/">Peter</a>, and <a
href="http://hanssonlarsson.se/">Linus</a>.</p><h2>Script tag</h2><pre class="incorrect"><code >&lt;script src="http://yourdomain.com/script.js"&gt;&lt;/script&gt;</code></pre><p>While being the stand-alone, cross-browser, and the shortest piece of code possible; it doesn&#8217;t download asynchronously and doesn&#8217;t lazy load. <strong>Fail</strong>.</p><div
style="overflow: auto;"><img
class="alignnone size-full wp-image-619" title="Firebug screenshoot with script tag" src="http://friendlybit.com/wp-content/uploads/2010/05/script.png" alt="" width="725" height="70" /></div><p><em><strong>Screenshot from Firebug&#8217;s net console: </strong>The script (set to load in 2 seconds) blocks the download of the big image (added after the above script tag, and used throughout this article as a test). Onload event (the red line) triggers after 2.46 seconds.</em></p><h2>Async pattern (A script tag written with javascript)</h2><p><a
href="http://stevesouders.com">Steve Souders</a>, the web performance guru, has compiled a decision tree over <a
href="http://stevesouders.com/efws/images/0405-load-scripts-decision-tree-04.gif">different ways to achieve non-blocking downloads</a>. Have a look at that graph.</p><p>Since we&#8217;re on a different domain, and only have one script (order doesn&#8217;t matter), the solution is given: We should create a script tag with inline javascript, and append it to the document. Voila! Non-blocking download!</p><pre><code >(function() {
    var s = document.createElement('script');
    s.type = 'text/javascript';
    s.async = true;
    s.src = 'http://yourdomain.com/script.js';
    var x = document.getElementsByTagName('script')[0];
    x.parentNode.insertBefore(s, x);
})();</code></pre><p><strong>Note</strong>: <code >async</code> is a <a
href="http://www.whatwg.org/specs/web-apps/current-work/#attr-script-async">HTML5 attribute</a>, doing exactly what we&#8217;re trying to simulate with our hack, so it&#8217;s added for good measure. Also, wrapping the code in an anonymous function prevents any variables to leak out to the rest of the document.</p><p>This is a pattern that is getting more and more popular nowadays, especially since <a
href="http://code.google.com/apis/analytics/docs/tracking/asyncTracking.html">Google Analytics uses it</a>. But there&#8217;s an important distinction here: The above snipped <strong>blocks onload from triggering</strong> until the referenced script is fully loaded. <strong>Fail</strong>.</p><p><strong>Update 2010-09-01</strong>: <a
href="#comment-34047">Steve Souders</a> adds that the above is only true for Firefox, Chrome, and Safari, but not IE and Opera. So for a IE-only site, this might be the best method.</p><div
style="overflow: auto;"><img
class="alignnone size-full wp-image-617" title="Firefox screenshoot with the async pattern" src="http://friendlybit.com/wp-content/uploads/2010/05/asyncload.png" alt="" width="726" height="69" /></div><p><em><strong>Screenshot from Firebug&#8217;s net console: </strong>The script (set to load  in 2 seconds) downloads in parallell with the big image. Onload event (the red line) triggers after 2.02 seconds.</em></p><h2>Lazy load pattern (Async pattern triggered onload)</h2><p>So, how to you make sure you don&#8217;t block onload? Well, you wrap your code inside a function that&#8217;s called on load. When the onload event triggers, you know you haven&#8217;t blocked it.</p><pre><code >window.onload = function() {
    var s = document.createElement('script');
    s.type = 'text/javascript';
    s.async = true;
    s.src = 'http://yourdomain.com/script.js';
    var x = document.getElementsByTagName('script')[0];
    x.parentNode.insertBefore(s, x);
}</code></pre><p>This works, but it overrides the onload event of the site that uses the script. This could be OK in some cases, where you have control over the site referencing the script, but I need to cater for that. <strong>Fail</strong>.</p><h2>Unobtrusive lazy load pattern</h2><p>The logical solution to the above problem is to use an incarnation of addEvent. addEvent is simply a common name for an cross browser way to take the current function tied to onload, add it to a queue, add your function to the queue, and tie the queue to the onload event. So which version of addEvent should we use?</p><p>There&#8217;s been competitions for writing a <a
href="http://www.quirksmode.org/blog/archives/2005/10/_and_the_winner_1.html">short and compact version of addEvent</a>, and the winner of that competition was John Resig, with this little beauty:</p><pre><code >function addEvent(obj, type, fn)  {
  if (obj.attachEvent) {
    obj['e'+type+fn] = fn;
    obj[type+fn] = function(){obj['e'+type+fn](window.event);}
    obj.attachEvent('on'+type, obj[type+fn]);
  } else
    obj.addEventListener(type, fn, false);
}</code></pre><p><strong>Note</strong>: This is unsafe code, since it relies on serializing a function to a string, something that <a
href="http://my.opera.com/hallvors/blog/2007/03/28/a-problem-with-john-resigs-addevent">Opera mobile browsers have disabled</a>.</p><p>Thing is, we don&#8217;t need all that generic event stuff, we&#8217;re only dealing with onload here. So if we first replace the type attribute with hardcoded &#8216;load&#8217;, replace obj with &#8216;window&#8217;, and remove the fix for making &#8216;this&#8217; work in IE, we&#8217;ve got four lines of code left. Let&#8217;s combine this with the above lazy load pattern:</p><pre><code >(function() {
    function async_load(){
        var s = document.createElement('script');
        s.type = 'text/javascript';
        s.async = true;
        s.src = 'http://yourdomain.com/script.js';
        var x = document.getElementsByTagName('script')[0];
        x.parentNode.insertBefore(s, x);
    }
    if (window.attachEvent)
        window.attachEvent('onload', async_load);
    else
        window.addEventListener('load', async_load, false);
})();</code></pre><p>This is exactly what we&#8217;re looking for here. <strong>Finally!</strong></p><div
style="overflow: auto;"><img
class="alignnone size-full wp-image-618" title="Firebug screenshoot with the lazy load pattern" src="http://friendlybit.com/wp-content/uploads/2010/05/lazyload.png" alt="" width="726" height="71" /></div><p><em><strong>Screenshot from Firebug&#8217;s net console: </strong>The script  (set to load  in 2 seconds) downloads after the onload event has triggered. Onload event (the red line) triggers after 0.41 seconds.</em></p><p>And that wraps up this article: Different tactics works for different scenarios, and only understanding them all makes you capable of picking the right one for your problem. As always, I&#8217;m waiting for your feedback in the comments. Thanks for reading!</p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:67:"http://friendlybit.com/js/lazy-loading-asyncronous-javascript/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:2:"58";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:3;a:6:{s:4:"data";s:10:"          ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:26:"My iPad – a short review";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:57:"http://friendlybit.com/modern-web/my-ipad-a-short-review/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:66:"http://friendlybit.com/modern-web/my-ipad-a-short-review/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 25 Apr 2010 18:33:32 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:2:{i:0;a:5:{s:4:"data";s:7:"Devices";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:10:"Modern web";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=594";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:273:"About two weeks ago, I got my hands on an iPad. For those of you who have been living under a rock for the last months, and iPad is something that looks like a big iPhone, but behaves much like a small laptop. Since people who just spent over $500 for a toy, are very [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:10415:"<p>About two weeks ago, I got my hands on an iPad. For those of you who have been living under a rock for the last months, and <a
href="http://www.apple.com/ipad/">iPad</a> is something that looks like a big iPhone, but behaves much like a small laptop.</p><p>Since people who just spent over $500 for a toy, are very subjective in their judging (buying something bad would make you look stupid!), you have to take this review for what it is: Me trying to justify buying an expensive toy. To help my mind balance things a bit, I&#8217;m going to talk about two good things, and two bad things about the iPad.</p><ul><li><a
href="#ipad_ui"><strong>Good</strong>: Looks, UI and surfing the web</a></li><li><a
href="#ipad_developer"><strong>Bad</strong>: A horrible Developer Platform</a></li><li><a
href="#ipad_games"><strong>Good</strong>: Games that use the touch interface</a></li><li><a
href="#ipad_itunes"><strong>Bad</strong>: Downloading apps through iTunes</a></li><li><strong><a
href="#ipad_summary">Summary</a></strong></li></ul><h2 id="ipad_ui">Good: Looks, UI and surfing the web</h2><div
id="attachment_597" class="wp-caption alignleft" style="width: 310px"><a
href="http://friendlybit.com/wp-content/uploads/2010/04/ipad_and_banana.jpg"><img
class="size-medium wp-image-597 " title="iPad and Banana" src="http://friendlybit.com/wp-content/uploads/2010/04/ipad_and_banana-300x225.jpg" alt="" width="300" height="225" /></a><p
class="wp-caption-text">An iPad, here shown next to a old banana for comparison. Click for bigger image.</p></div><p>The area where the iPad really shines is when it comes to the look and feel. It&#8217;s simply gorgeous, feels good in your hand, and makes all your friends instantly drool (like you expect them to). The screen is as sharp (or sharper) than a computer monitor, and its brightness could light up a dark room.</p><p>Working with it is just as pleasant. You click, swipe, pinch and type, like you&#8217;ve done nothing nothing else in your life. As someone who haven&#8217;t used an iPhone before, I&#8217;m impressed. Those that have, say that the iPad is even snappier than the iPhone. Some application are of course better fit for a touch interface than others. Google Maps is one of them, when a large display combined with panning and zooming makes the old arrow and zoom buttons on the traditional Google Maps interface feel like stone-age.</p><p>They keyboard surprised me by being even better than I expected. In landscape mode it&#8217;s almost as large as a laptop keyboard, and in some cases even faster than a traditional keyboard since you don&#8217;t have to push, just touch the buttons. The biggest keyboard problem though is of course that you usually only have one hand available. When you have two hands, it&#8217;s great.</p><p>Another area where the iPad really works is as <strong>a window to the web</strong>.  Safari comes pre-installed (Microsoft monopoly anyone?) but works like a  charm. Pages load quickly, and swiping to scroll and pinch to zoom  works just like it should.</p><p>Web standards are well supported, like  you expect from Safari. But some new problems emerge when looking at  HTML5 demos though:</p><ul><li>The Safari inside the iPad isn&#8217;t as performant as a desktop  browser. So there&#8217;s lots of lagging when trying to rotate things in  advanced ways.</li><li>Even though Apple has decided to ban Flash and pick a fight with  Adobe, many new apps are built to take advantage of the mouse moving  around. On the iPad, there&#8217;s no mouse pointer, so you have to simulate  one by touching the screen and moving the finger around.</li><li>Keyboard navigation is strange, because most of the time, you  don&#8217;t have a keyboard. The keyboard only shows up only when you focus a  text field, at other times, you&#8217;re lost.</li></ul><p>These things sound like annoyances, and they are, but they are also  quite minor. For all the surfing you usually do, the iPad works just  like it should.</p><h2 id="ipad_developer">Bad: A horrible Developer Platform</h2><p>As you&#8217;ve probably heard during the last few weeks, Apple have no clue whatsoever about how to cultivate a vibrant developer community. Let&#8217;s look at the facts:</p><ul><li>To distribute your app you need to join the iPhone Developer Program, that costs you $99-$299 per year.</li><li>To download the SDK you need to fill out a huge multi-step form (where almost all fields are required), and where you&#8217;re asked to give away lots of personal information.</li><li>When you &#8220;publish&#8221; your app it has to go through a manual approval process, which could take months if you are unlucky.</li><li>You need to approve to a ridiculous legal statement preventing you from using some programming languages, and making calls to some APIs.</li></ul><p>To quote:</p><blockquote><p>&#8220;3.3.1 — Applications may only use Documented APIs in the manner   prescribed by Apple and must not use or call any private APIs.   Applications must be originally written in Objective-C, C, C++, or   JavaScript as executed by the iPhone OS WebKit engine, and only   code written in C, C++, and Objective-C may compile and directly   link against the Documented APIs (e.g., Applications that link to   Documented APIs through an intermediary translation or   compatibility layer or tool are prohibited).&#8221;</p></blockquote><p>Needless to say,<strong> I&#8217;m never going to be develop anything for the Apple Platform</strong>. Apple and its developers is much like one big company (with strict rules). The only difference is that instead of a salary the developers get to pay to work for them. Good for Apple, horrible for developers.</p><h2 id="ipad_games">Good: Games that use the touch interface</h2><p>There are lots of good games that have started to take advantage of the big touch surface to make fun interaction styles possible.</p><ul><li><a
href="http://itunes.apple.com/us/app/tap-tap-radiation/id364160328?mt=8">Tap Tap Radiation</a> builds on you tapping the screen in pace with the music playing. The place to hit move around, just like the markers that indicate where to tap.</li><li><a
href="http://itunes.apple.com/us/app/id363998989?mt=8">Asphalt 5</a> is a beautiful racing game where you use the iPad as a steering wheel and tilt it back and fourth to steel. Since the accelerometer is so sensitive it works remarkably well.</li><li><a
href="http://itunes.apple.com/se/app/n-o-v-a-near-orbit-vanguard/id343596730?mt=8">N.O.V.A. &#8211; Near Orbit Vanguard Alliance</a> is a first person shooter that uses gestures to control who you shoot and how. Advanced gestures makes it possible to throw grenades that fly around corners, and targeting multiple enemies at once.</li></ul><p>Simply put, there are lots of fun games for the iPad, and the reason is experimentation with the touch interface. Combine this with several days of battery power, and you have many hours of fun ahead of you.</p><h2 id="ipad_itunes">Bad: Downloading apps through iTunes</h2><div
id="attachment_601" class="wp-caption alignleft" style="width: 162px"><a
href="http://friendlybit.com/wp-content/uploads/2010/04/ipad_closeup.jpg"><img
class="size-medium wp-image-601       " title="iPad closeup" src="http://friendlybit.com/wp-content/uploads/2010/04/ipad_closeup-225x300.jpg" alt="" width="152" height="203" /></a><p
class="wp-caption-text">A closer look at the iPad, still with the banana present. Click for bigger image.</p></div><p>Sadly, the only way to get apps legally into the iPad is through iTunes. Since my iPad was bought in the US, the App Store icon leads to a &#8220;Your request could not be completed&#8221; with no further info. So it seems that the App Store is only launched in the US. Silly me, that thought the web was an international thing.</p><p>Anyway, it is possible to get apps into the iPad without getting a fake american App Store account. You just use iTunes to download the apps to a desktop computer, and then sync your app to the iPad. It&#8217;s easy.</p><p>Well, strike that, using the iTunes store is not easy. Not being a previous iPhone using I had thought that downloading apps from iTunes was like shopping on Amazon. <strong>IT&#8217;S NOT EVEN CLOSE</strong>. This is how Apple built iTunes:</p><ol><li>Take one  fully functional e-commerce web site.</li><li>Make it slow so that people like me that surf on a 100 Mbit/s fibre connection have to wait several seconds after each click.</li><li>Make sure you can only access the store through a special downloadable app, that requires you sign several legal agreements, and leave away personal information, before you even bought anything.</li><li>Remove the possibility to sort through listings, remove any information what the list is currently sorted by, and hide options to only show apps for the device they know you just connected (the iPad).</li><li>Tada! You&#8217;ve built iTunes!</li></ol><p>Needless to say, each visit to the iTunes App Store is a bad experience, and no something you want to do often.</p><h2 id="ipad_summary">Summary</h2><p>Situations where I see myself using my iPad:</p><ul><li>In bed, watching public television through Svtplay. They have a great app, that is mainly adapted for iPhone, but scales up when used on a bigger screen.</li><li>Casually surfing the web from the couch. This includes checking my e-mail (which is IMAP over SSL, which works fine), checking my feeds through Google Reader, checking Facebook through the iPhone app (which can be pixel-doubled to fit the screen nicely), and twitter through twitterific.</li><li>Surfing all kinds of maps, and wikipedia in some social context. If I ever get into an argument about where a country is exactly, I&#8217;m pull up my iPad instantly and check it.</li></ul><p>And that concludes this iPad review.</p><div
id="attachment_607" class="wp-caption alignnone" style="width: 310px"><a
href="http://friendlybit.com/wp-content/uploads/2010/04/ipad_off_and_banana.jpg"><img
class="size-medium wp-image-607" title="iPad turned off" src="http://friendlybit.com/wp-content/uploads/2010/04/ipad_off_and_banana-300x225.jpg" alt="" width="300" height="225" /></a><p
class="wp-caption-text">iPad rests here, next to banana.</p></div><p>As usual<strong> </strong>I&#8217;m looking forward to<strong> your thoughts in the comments</strong>. Thanks for reading!</p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:62:"http://friendlybit.com/modern-web/my-ipad-a-short-review/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:2:"14";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:4;a:6:{s:4:"data";s:12:"            ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:37:"Rendering a web page – step by step";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:61:"http://friendlybit.com/css/rendering-a-web-page-step-by-step/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:70:"http://friendlybit.com/css/rendering-a-web-page-step-by-step/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 11 Jan 2010 00:04:33 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:4:{i:0;a:5:{s:4:"data";s:8:"Browsers";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:3:"CSS";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:2;a:5:{s:4:"data";s:4:"HTML";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:3;a:5:{s:4:"data";s:2:"JS";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=580";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:301:"Have you ever thought about what happens when you surf the web? It&#8217;s not as simple as it seems: You type an URL into address bar in your preferred browser. The browser parses the URL to find the protocol, host, port, and path. It forms a HTTP request (that was most likely the protocol) To [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:3335:"<p>Have you ever thought about what happens when you surf the web? It&#8217;s not as simple as it seems:</p><ol><li>You <strong>type an URL</strong> into address bar in your preferred browser.</li><li>The browser <strong>parses the URL</strong> to find the protocol, host, port, and path.</li><li>It <strong>forms a HTTP request</strong> (that was most likely the protocol)</li><li>To reach the host, it first needs to <strong>translate </strong>the human readable host<strong> into an IP number</strong>, and it does this by doing a DNS lookup on the host</li><li>Then a <strong>socket needs to be opened</strong> from the user&#8217;s computer to that IP number, on the port specified (most often port 80)</li><li>When a connection is open, the <strong>HTTP request is sent</strong> to the host</li><li>The host <strong>forwards the request</strong> to the server software (most often Apache) configured to listen on the specified port</li><li>The <strong>server inspects the request</strong> (most often only the path), and <strong>launches the server plugin needed</strong> to handle the request (corresponding to the server language you use, PHP, Java, .NET,  Python?)</li><li>The plugin gets access to the full request, and starts to prepare a HTTP response.</li><li>To construct the response a <strong>database </strong>is (most likely) <strong>accessed</strong>. A database search is made, based on parameters in the path (or data) of the request</li><li>Data from the database, together with other information the plugin decides to add, is <strong>combined into a long string</strong> of text (probably HTML).</li><li>The plugin <strong>combines </strong>that data with some meta data (in the form of HTTP headers), and <strong>sends the HTTP response</strong> back to the browser.</li><li>The browser receives the response, and <strong>parses the HTML</strong> (which with 95% probability is broken) in the response</li><li>A <strong>DOM tree is built</strong> out of the broken HTML</li><li><strong>New requests are made</strong> to the server for each new resource that is found in the HTML source (typically images, style sheets, and JavaScript files). Go back to step 3 and repeat for each resource.</li><li><strong>Stylesheets are parsed</strong>, and the rendering information in each gets attached to the matching node in the DOM tree</li><li><strong>Javascript is parsed and executed</strong>, and DOM nodes are moved and style information is updated accordingly</li><li>The browser <strong>renders the page</strong> on the screen according to the DOM tree and the style information for each node</li><li><strong>You</strong><strong> see</strong> the page on the screen</li><li>You get annoyed the whole process was too slow.</li></ol><p>I, too, get annoyed when the above steps take longer than one tenth of a second. But now at least I have some documentation to look at, while waiting the remaining fractions of a second before the page renders.</p><p><a
href="http://www.flickr.com/photos/amboo213/115034446/sizes/s/"><img
class="alignnone" title="Spoiled dog - by amboo213 on Flickr" src="http://farm1.static.flickr.com/45/115034446_8bf43c2273_m.jpg" alt="Spoiled dog" width="240" height="180" /></a></p><p>Spoiled we are, all of us.</p><p><em>(Feel free to add more steps, through the comments&#8230;)</em></p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:66:"http://friendlybit.com/css/rendering-a-web-page-step-by-step/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:2:"22";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:5;a:6:{s:4:"data";s:9:"         ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:29:"Position: fixed CSS templates";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:56:"http://friendlybit.com/css/position-fixed-css-templates/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:65:"http://friendlybit.com/css/position-fixed-css-templates/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 31 Dec 2009 14:14:26 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:3:"CSS";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=573";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:320:"In 2006 I wrote an article about simulating Frames and Iframes and from time to time, I get questions of how to make modifications to the templates presented. But one big thing has changed since 2006: Perfect support for IE6 is no longer mandatory. So yesterday, when Brandon Cobb of Super Fighter Team asked about [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:2905:"<p>In 2006 I wrote an article about <a
href="http://friendlybit.com/css/frames-or-iframes-with-css/">simulating Frames and Iframes</a> and from time to time, I get questions of how to make modifications to the templates presented. But one big thing has changed since 2006: <strong>Perfect support for <abbr
title="Internet Explorer 6">IE6</abbr> is no longer mandatory</strong>.</p><p>So yesterday, when Brandon Cobb of <a
href="http://superfighter.com/">Super Fighter Team</a> asked about a design with a fixed header, fixed left column, and scrolling right column, I thought I&#8217;d renew my take on <a
href="http://friendlybit.com/css/frames-or-iframes-with-css/">simulating frames</a> with CSS (The original article is still good for background information, so I still recommend reading it).</p><h2>Position: fixed CSS templates</h2><p>The idea is this: Instead of specifying what parts of the page should scroll, we can <strong>specify what parts should stay fixed when scrolling</strong>. This makes it easier to deal with several fixed parts of the same layout, but also allows us do to things frames cannot do.</p><p>So what&#8217;s the trick? Well, <code >position: fixed</code> does exactly what we want. It works just like <code >position: absolute</code>, but it stays still when the page is scrolled. So it&#8217;s really just a matter of making sure things don&#8217;t overlap.</p><ul><li><a
href="http://friendlybit.com/files/fixed/fixedtopandleft.html">Demo: Fixed top, fixed left, scrolling right</a></li><li><a
href="http://friendlybit.com/files/fixed/fixedtop.html">Demo: Fixed top, scrolling bottom</a></li><li><a
href="http://friendlybit.com/files/fixed/fixedleft.html">Demo: Fixed left, scrolling right</a></li></ul><p><strong>Try resizing the page, and see how the scrolling works</strong>. The templates have been tested in: Fx 3.5, IE8, IE7, IE6 (see note below), Opera 10, Safari 4; all on Windows. Let me know if you can test it on more browsers, or find bugs.</p><p>You&#8217;re of course free to use this templates as you see fit, with or without a link back, commercially or not. Consider it public domain.</p><h2>Fixes for IE6</h2><p>As I&#8217;ve said, these designs don&#8217;t act the same in IE6. Instead of some parts being fixed, the whole page scrolls in IE6. The good thing about this is that <strong> IE6 users won&#8217;t see that your site is &#8220;broken&#8221;</strong>, they will just get another design. And as the number of IE6 users goes towards zero, your design will be more and more consistent :). The fallback is very simple, IE6 gets <code >position: absolute</code> instead of fixed, using the <a
href="http://www.webdevout.net/css-hacks#in_css-important">!important hack</a> (you should probably use <a
href="http://www.quirksmode.org/css/condcom.html">conditional comments</a> instead).</p><p>Hope these templates are useful for some of you!</p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:61:"http://friendlybit.com/css/position-fixed-css-templates/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:2:"20";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:6;a:6:{s:4:"data";s:9:"         ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:25:"Google support gone wrong";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:55:"http://friendlybit.com/other/google-support-gone-wrong/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:64:"http://friendlybit.com/other/google-support-gone-wrong/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 24 Oct 2009 13:00:28 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:12:"Other topics";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=566";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:355:"Google really produces great software. I use many of them: Web Search, Picasa, Reader, Feedburner, Analytics, Images, Groups, Docs, Translate, Code, Chrome, Maps, Video, Blog Search, Youtube, AJAX API, Webmaster Central, and Site Search. Just to name a few :) Problem is, with many of the above, if something breaks you&#8217;re out of luck. Because [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:4190:"<p>Google really produces great software. I use many of them: Web Search, Picasa, Reader,  Feedburner, Analytics, Images, Groups, Docs, Translate, Code, Chrome, Maps, Video, Blog Search, Youtube, AJAX API, Webmaster Central, and Site Search.</p><p>Just to name a few :)</p><p>Problem is, with many of the above, if something breaks you&#8217;re out of luck. Because it&#8217;s <strong>god damn impossible</strong> to get a hold of someone that you can talk to. Do you reach anyone at Google with your e-mails? Does anyone from Google read your forum posts? Highly unlikely.</p><p>Google is a great example of support gone wrong. I think the explanation is easy: Few of the programmers I know want to deal with support. They want to deal with coding! And since Google is a company of programmers, it doesn&#8217;t want to do support.</p><p>Let me tell two stories:</p><h2>Feedburner</h2><p>Feedburner once was a great company, with a simple but thought out service. They gave you subscriber statistics of your RSS feed. You just redirected your feed to them, and made all your subscribers sign up to their generated feed, and they did all the tricky calculations. Simple, efficient.</p><p>As a company Feedburner understood the value of being personal. Messages throughout the site stated &#8220;My feeds like a little namespace to call their own&#8221;, &#8220;Sometimes your feed just wants to look good. Spruce it up in the following ways&#8221;, &#8220;Oh dear, what kind of trouble?&#8221;. Nice personal touch :) Feedburner developers where easy to get in touch with, an e-mail and you had a friendly, knowledgeable person to talk to.</p><p>Then Google came along and bought the whole thing. Everything was rewritten to Google&#8217;s platform, domains where switched, and chaos ensued. Of course, during that time, Feedburner&#8217;s previous support people totally vanished, and everyone was directed to the Feedburner Status Blog, when you could confirm they where <strong>not </strong>working on your problem. Just great.</p><p>For three weeks now, my subscriber stats have jumped from 800 to 3000, back an forth, several times per week. Nice, isn&#8217;t it?</p><p><img
class="alignnone size-full wp-image-567" title="feedburner_stats" src="http://friendlybit.com/wp-content/uploads/2009/10/feedburner_stats.PNG" alt="feedburner_stats" width="519" height="165" /></p><p>Feedburner is apparently broken, and the simple service of delivering feed statistics doesn&#8217;t work.</p><p>So I <a
href="http://groups.google.com/group/feedburner-statistics/browse_thread/thread/3989f82b9efc3b26/e0990145155dca15?lnk=gst&amp;q=subscriber&amp;pli=1">post to their Google Group</a>, the place where you should ask questions about the service. Three months later, several other users have reported having the same problem, but no reply from a Feedburner developer.</p><p>Now I&#8217;m thinking of switching. Anyone have a good alternative ready?</p><h2>Google Wave</h2><p>Services that start at Google are even less likely, compared to acquired services like Feedburner, to have proper support. It&#8217;s just not a priority, and there&#8217;s far too many interesting programming challenges to deal with users.</p><p>So when Wave gives me an old picasa name as my username (&lt;company name&gt;.&lt;place of one of our conferences&gt;@googlewave.com), I know there&#8217;s very little chance that I&#8217;ll get help from anywhere. The official channel to ask for help is their support forum, but it doesn&#8217;t seem that they reply to issues there. <a
href="http://www.google.com/support/forum/p/wave/thread?tid=6cb8ca45d22453e5&amp;hl=en">My message there from two weeks ago</a> stands on it&#8217;s own, with no replies.</p><p>It&#8217;s the proposed revolution that will replace e-mail, and I can&#8217;t use it :(</p><h2>Bad trend</h2><p>This trend of Google not offering even basic support from dedicated people is a unfortunate development, that should be taken seriously by executives at Google, and dealt with at a very high level.</p><p>Launching new web services is easy, improving a services based on feedback is much harder. Google has not yet managed to crack that nut.</p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:60:"http://friendlybit.com/other/google-support-gone-wrong/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:2:"10";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:7;a:6:{s:4:"data";s:9:"         ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:44:"Google Chrome as an Internet Explorer plugin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:77:"http://friendlybit.com/browsers/google-chrome-as-an-internet-explorer-plugin/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:86:"http://friendlybit.com/browsers/google-chrome-as-an-internet-explorer-plugin/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 23 Sep 2009 14:15:49 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:8:"Browsers";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=560";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:320:"I just encountered a quite mindboggling piece of news on the Google Wave blog. It seems they have decided not to support Internet Explorer at all. Not IE6, IE7 or IE8. Surprised? I sure was. What&#8217;s even better is that to still give these users the opportunity to use Google Wave, they&#8217;ve built a plugin [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:1288:"<p>I just encountered a quite mindboggling piece of news on the Google Wave blog. It seems they have decided <strong>not to support Internet Explorer at all</strong>. Not IE6, IE7 or IE8. Surprised? I sure was. What&#8217;s even better is that to still give these users the opportunity to use Google Wave, they&#8217;ve built a plugin for Internet Explorer, that loads the <a
href="http://googlewavedev.blogspot.com/2009/09/google-wave-in-internet-explorer.html">Chrome browser with Google Wave inside it</a>.</p><p><strong>What?</strong> Load a browser as a plugin inside another one? I guess this is a real war after all? Who will build the first browser to load Firefox into Chrome? Internet Explorer inside Firefox?</p><p><strong>Why?</strong> Well, now they don&#8217;t have to care about Internet Explorer support at all. Felt that heavy weight lift from your shoulders? Suddenly large parts of HTML5, CSS3, and modern javascript, is available to them, with no backporting and performance tuning needed. Must be fabulous.</p><p>Now. Combine that with the possibility for the developer to <a
href="http://blog.chromium.org/2009/09/introducing-google-chrome-frame.html">choose when to trigger the different browsers</a>. We&#8217;re up for a whole new ride. You&#8217;re invited.</p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:82:"http://friendlybit.com/browsers/google-chrome-as-an-internet-explorer-plugin/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:2:"20";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:8;a:6:{s:4:"data";s:9:"         ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:55:"SpriteMe – Combine images and get fewer HTTP requests";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:79:"http://friendlybit.com/css/spriteme-combine-images-and-get-fewer-http-requests/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:88:"http://friendlybit.com/css/spriteme-combine-images-and-get-fewer-http-requests/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 19 Sep 2009 15:09:02 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:3:"CSS";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=557";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:356:"Those of you that care about website performance have probably read about combining images, something that&#8217;s called &#8220;CSS sprites&#8221;. The idea is that by using the same (somewhat larger) image several times, you get fewer HTTP requests to your site, and therefore speed it up. Problem is, most of your images are CSS background images, [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:1364:"<p>Those of you that care about website performance have probably read about combining images, something that&#8217;s called &#8220;CSS sprites&#8221;. The idea is that by using the same (somewhat larger) image several times, you get fewer HTTP requests to your site, and therefore speed it up. Problem is, most of your images are CSS background images, that are positioned using clever background-positions and repeats.</p><p>Now, this makes to tricky to combine images. Something that repeats horizontally can&#8217;t be combined with something that repeats vertically (unless there&#8217;s transparency involved), and wide images can&#8217;t be combined with narrow ones. So combining is usually tedious, manual work, both to combine the images and then calculate the new background-positions required.</p><p>Lucky for us then, that there is a tool called <a
href="http://spriteme.org/">SpriteMe</a>, available as a bookmarklet (a bookmark containing javascript), and as an excellent <a
href="http://spriteme.org/demo.php">online demo</a> that walks you through how it works. SpriteMe does all the hard work for you, you just have to copy and paste both the combined images, and the new background rules, to your site.</p><p>Decreasing the number of HTTP requests have never been simpler. Well done <a
href="http://www.stevesouders.com/">Steve Souders</a>!</p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:84:"http://friendlybit.com/css/spriteme-combine-images-and-get-fewer-http-requests/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:2:"10";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:9;a:6:{s:4:"data";s:9:"         ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:43:"Voddler – movie streaming for the masses?";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:68:"http://friendlybit.com/other/voddler-movie-streaming-for-the-masses/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:77:"http://friendlybit.com/other/voddler-movie-streaming-for-the-masses/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 30 Aug 2009 22:12:46 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:12:"Other topics";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=549";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:316:"I&#8217;ve recently managed to get a hold of a beta invite to Voddler, and thought I should tell you a little about my experience of it. But first, big thanks to Gunnar Bark (Tweets in Swedish, follow him!) who tipped me off about a Voddler invitation competition. It was run by Christian Rudolf at mjukvara.se [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:4593:"<p>I&#8217;ve recently managed to get a hold of a beta invite to <a
href="http://www.voddler.com/">Voddler</a>, and thought I should tell you a little about my experience of it. But first, big thanks to <a
href="http://twitter.com/GunnarBark">Gunnar Bark</a> (Tweets in Swedish, follow him!) who tipped me off about a Voddler invitation competition. It was run by Christian Rudolf at <a
href="http://www.mjukvara.se/blogg/">mjukvara.se</a> (In Swedish, but definitely something to add to your feeds) who had 15 invites to give away.</p><p>Anyway.</p><p>Two years ago, <a
href="http://friendlybit.com/other/spotify-is-a-lot-like/">I got to test Spotify</a>, a music streaming that will soon launch in the US and is heavily anticipated. It completely changed how I listened to music, I deleted all my mp3:s and is now streaming all my music. <a
href="http://www.voddler.com/">Voddler</a> is a similar streaming service, but for movies.</p><p>So, what do I think of it?</p><p>First of all, Voddler is in a very early phase of testing. It&#8217;s what I would call a &#8220;<strong>real beta</strong>&#8220;, where the client crashes frequently, subtitles sometimes lag behind, the interface is tricky to use, and several features just don&#8217;t work.</p><p>Thing is, I&#8217;m quite certain Voddler will <strong>revolutionize how I watch movies</strong>, anyway. Because at the core of Voddler is HD-quality streaming, that just works. Believe me, I normally don&#8217;t watch that many movies, but have seen <strong>four</strong>,<strong> </strong>in the last 48 hours. They are just a couple of clicks away, and start in 10 seconds (during which you&#8217;ll watch a commercial). Here&#8217;s some <a
href="http://pappmaskin.no/2009/07/voddler-screenshots-and-details/">screenshots</a>.</p><p>Now. I&#8217;m saying that the client is a beta, and that there are serious bugs left, what kind of bugs do I mean?</p><ul><li>About half of the <strong>menu options don&#8217;t work</strong>. &#8220;Tv series&#8221; lead nowhere, I can&#8217;t browse movies by actor, director, studio, and several genres are empty. In my opinion, they would gain a lot by just <strong>removing those options until they lead somewhere</strong>! This is a no-brainer.</li><li>The <strong>client freezes and crashes</strong> regularly, and I have never been able to watch two movies in a row without restarting in between. This of course requires squashing bugs that are left in the code, and <strong>improve the testing procedure</strong>, so that such bugs never reach production code. Using mozilla-style reporting that allow people to <strong>send in crash reports</strong> is probably a good idea at this stage. The code is based on <a
href="http://en.wikipedia.org/wiki/XBMC">XBMC</a>, and people say stuff like &#8220;how could they add that many bugs to a product that good?!&#8221;. Voddler, don&#8217;t make it that easy to dismiss your hard work!</li><li>Sometimes the <strong>subtitles skip some lines</strong>. I watched <a
href="http://www.imdb.com/title/tt0325005/">Antikiller</a>, a russian action movie, five times important lines were shown only half a second on the screen, making me miss important pieces of the story. I&#8217;m not sure if this had something to do with the subtitles for that exact movie, or lag because of Voddler, but I know that it was a crappy first impression of the client. It just has to be fixed.</li><li>The <strong>support forum is so slow it&#8217;s unusable</strong>. My guess is that it&#8217;s on the same network as the movie streaming service, and therefore goes down together with that one. Those two just <strong>have to </strong>be independent, as you need the forum most when the other is down.</li><li>The <strong>UI doesn&#8217;t work usability-wise</strong>. First of all, it&#8217;s built for television sets, which means that only the keyboard works (arrow keys, space and esc), no mouse support. Several of the menues cycle (when you&#8217;re on the end the first item appears again), so you&#8217;ll easily loose track of where you are. There are small errors all over the place, things that makes finding and starting movies difficult.</li></ul><p>So, in summary, the core of Voddler is good, but the interface needs quite a lot of work before it can be released to the public. No matter what, I&#8217;ll keep following the development of this product!</p><p>In general, it seems that when you Americans stop us from using your servies (ie. <a
href="http://www.voddler.com">Hulu</a>), we Swedes build our own services. First Spotify, now Voddler.</p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:73:"http://friendlybit.com/other/voddler-movie-streaming-for-the-masses/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"7";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:10;a:6:{s:4:"data";s:10:"          ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:31:"Techniques to use when IE6 dies";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:59:"http://friendlybit.com/css/techniques-to-use-when-ie6-dies/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:68:"http://friendlybit.com/css/techniques-to-use-when-ie6-dies/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 26 Aug 2009 21:54:51 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:2:{i:0;a:5:{s:4:"data";s:8:"Browsers";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}i:1;a:5:{s:4:"data";s:3:"CSS";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=496";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:352:"Everyone except Microsoft themselves are talking about the death of IE6. I&#8217;ve tried motivating people to drop support, arguing that you at least can show IE6 users a message. Many have replied with &#8220;but our IT department doesn&#8217;t let us&#8230;&#8221;, and I can say nothing more than that the IT department is filled with humans. [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:2672:"<p>Everyone<a
href="http://www.eweek.com/c/a/Windows/Microsoft-Internet-Explorer-6-Support-Continues-Despite-Calls-for-PhaseOut-307122/"> except Microsoft themselves</a> are talking about the death of IE6. I&#8217;ve tried <a
href="/browsers/motivation-for-building-for-ie6/">motivating people to drop support</a>, arguing that you at least can show IE6 users a message. Many have replied with &#8220;but our IT department doesn&#8217;t let us&#8230;&#8221;, and I can say nothing more than that the IT department is filled with humans. Which means they are lazy, and upgrade when people whine enough about it. It&#8217;s a shame it has to be that way, that we have to <a
href="http://www.ie6nomore.com/corporate-users.html">punish people for their IT departments</a>, but that&#8217;s how it has to be.</p><p>As <strong>web developers</strong>, we should be the ones complaining the loudest. We have so much to win on IE6:s death it&#8217;s silly. Just look at the below list of things IE6 can&#8217;t do, but IE7 can (the next worst browser):</p><ul><li>Native PNG alpha transparency without silly hacks.</li><li>Several selectors: <a
href="http://crusher.w3.org/TR/CSS2/selector.html#child-selectors">Child selector</a> (&#8220;&gt;&#8221;), <a
href="http://crusher.w3.org/TR/CSS2/selector.html#adjacent-selectors">Adjacent sibling selector</a> (&#8220;+&#8221;), <a
href="http://crusher.w3.org/TR/CSS2/selector.html#attribute-selectors">Attribute selectors</a> ([attr=value]), and <a
href="http://www.w3.org/TR/css3-selectors/#general-sibling-combinators">General sibling selector</a> (&#8220;~&#8221;, CSS3)</li><li>Min-height, Max-height, Min-width, Max-width</li><li>Multiple class/id selectors in the same ruleset (ie. .class1.class2 { &#8230; })</li><li>:hover on all elements, not just links</li><li>position: fixed</li><li>Native XMLHTTP (Without ActiveX)</li><li>International Domain Names (IDN), the ability to use UTF-8 chars in domains</li><li>Page zoom that zooms the whole page (don&#8217;t worry about zoom)</li></ul><p>This is a huge step forward for us web developers. Huge! Bigger then when CSS3 comes out, because we won&#8217;t be able to use that one for years. Someone is pushing the front of what&#8217;s possible, I&#8217;m pushing for the front of what&#8217;s <strong>usable</strong>.</p><p>What can you do to help me get everything in the above list? And, did I forget something?</p><p>Sources:</p><ul><li><a
href="http://www.quirksmode.org/css/contents.html">CSS Compatibility charts</a></li><li><a
href="http://blogulate.com/content/new-features-of-internet-explorer-7/">IE6 vs IE7 &#8211; New features in Internet Explorer 7</a></li></ul> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:64:"http://friendlybit.com/css/techniques-to-use-when-ie6-dies/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:2:"34";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:11;a:6:{s:4:"data";s:9:"         ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:37:"Tapestry 5, and how not to treat HTML";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:65:"http://friendlybit.com/html/tapestry-5-and-how-not-to-treat-html/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:74:"http://friendlybit.com/html/tapestry-5-and-how-not-to-treat-html/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 23 Jul 2009 19:39:10 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:4:"HTML";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=528";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:368:"I&#8217;ve previously written about how Microsoft Sharepoint mistreats HTML, and makes it look a whole other language. But truth to be told, Sharepoint (and .NET for that matter) isn&#8217;t the only framework that can&#8217;t handle HTML. I&#8217;ve recently worked with a Java framework called Tapestry 5, and it&#8217;s really bad in some respects too (though [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:3743:"<p>I&#8217;ve previously written about how <a
href="http://friendlybit.com/html/default-html-in-sharepoint-2007/">Microsoft Sharepoint</a> mistreats HTML, and makes it look a whole other language. But truth to be told, Sharepoint (and .NET for that matter) isn&#8217;t the only framework that can&#8217;t handle HTML. I&#8217;ve recently worked with a Java framework called <a
href="http://tapestry.apache.org/">Tapestry 5</a>, and it&#8217;s really bad in some respects too (though not quite as bad as Sharepoint). Note that this is a review based on <strong>only</strong> how it handles HTML, not any other of its merits. Let&#8217;s get started.</p><p>Many of Tapestry&#8217;s problems comes from their design decision to parse the HTML you&#8217;re trying to output. Yes, Tapestry parses your HTML, and adds stuff to it dynamically. This is nothing new, anyone that has played with ASP.NET knows how hidden form elements get stuffed in here and there. This is a nightmare for an interface developer, we need exact control over HTML to do our jobs well.</p><p>Tapestry does horrible things to HTML:</p><ul><li><strong>Several extra javascripts and CSS files</strong> are referenced in the head tag. There is no simple way to get rid of these.</li><li><strong>A meta tag</strong> which states that the tapestry did generate this page, is added.</li><li>The two above are added to the head, and if a <strong>head tag doesn&#8217;t exist, it gets added</strong>. Never mind that your current little HTML snippet was just a little part of a page, that was being fetched with AJAX, Tapestry will add a head tag for you.</li><li><strong>More javascript, and a hidden div</strong> with a firebug-like console, is appended to the end of the body element.</li><li><strong>Self-closing tags are expanded</strong> to a start tag and an end tag (&lt;input /&gt; gets transformed to &lt;input&gt;&lt;/input&gt;), which means you can&#8217;t use XHTML together with Tapestry.</li><li><strong>All whitespace is removed</strong> by default, and you have to disable the &#8220;feature&#8221; on a tag-by-tag basis (&#8220;Please don&#8217;t strip whitespace inside this list, IE6 goes crazy then&#8221;). This is a mess for interface developers, who know that whitespace matters for rendering. It was even <a
href="https://issues.apache.org/jira/browse/TAPESTRY-2028">pointed out to Tapestry developers</a> early on, but was ignored.</li><li> There are ways to do loops, if:s, reference variables and generate URL:s, but all of these are based on the HTML parsing. And as a good parser, <strong>it skips all comments</strong>. This means using tapestry template code inside a HTML comment will not work. When do you need that? Conditional comments! So what if you want an URL generated to your IE6 stylesheet? No go. You&#8217;ll have to write a custom component that does that for you.</li><li>Changes the <strong>id of all your forms to &#8220;form&#8221; and adds name=&#8221;form&#8221;</strong> (which is invalid HTML).</li><li>Adds a <strong>hidden &#8220;t:formdata&#8221; field to forms</strong>, much like the dreaded ASP.NET viewstate.</li><li>One of the javascript files added is <a
href="http://www.prototypejs.org/">prototype</a>, a javascript framework which isn&#8217;t compatible with jQuery. So you have to rewrite your javascript code to work in &#8220;No conflicts mode&#8221; if you want it to work with Tapestry.</li></ul><p>No. Tapestry was clearly not built with an interface developer in mind. Why is it so hard for many web framework developers to just talk with people that work with HTML, CSS, and Javascript? Please ask us <strong>before</strong> implementing stuff like the above. We&#8217;ll gladly give you our viewpoint.</p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:70:"http://friendlybit.com/html/tapestry-5-and-how-not-to-treat-html/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:2:"28";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:12;a:6:{s:4:"data";s:9:"         ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:20:"Make a div clickable";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:47:"http://friendlybit.com/js/make-a-div-clickable/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:56:"http://friendlybit.com/js/make-a-div-clickable/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 30 Jun 2009 20:53:25 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:2:"JS";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=498";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:300:"We all dislike that links are so small, and hard to click. So of course we want to make the clickable areas bigger. Some would think that doing this with some CSS on the a-tag would be a good way, but then you can&#8217;t have block level elements inside it (you&#8217;ll get a validation error [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:2536:"<p>We all dislike that links are so small, and hard to click. So of course we want to make the clickable areas bigger. Some would think that doing this with some CSS on the a-tag would be a good way, but then you can&#8217;t have block level elements inside it (you&#8217;ll get a validation error if you try to put headings or paragraph tags inside of links). So what&#8217;s a more general solution?</p><p>My take is to use a div instead, and use javascript, of course together with a good fallback. When clicking the div, find the first link inside it, and go to that URL. It&#8217;s simple, and with a few additional quirks, it gets really useful.</p><p>Javascript code (requires jQuery):</p><pre><code >$(document).ready(function(){
   var block = $(".teaser");
   block.click(function(){
      window.location = $(this).find("a:first").attr("href")
   });
   block.addClass("clickable");
   block.hover(function(){
      window.status = $(this).find("a:first").attr("href")
   }, function(){
      window.status = ""
   })
});</code></pre><p>CSS for showing that the div actually is clickable:</p><pre><code >.clickable {
   cursor: pointer;
}
.clickable:hover {
   background: #efefef;
}</code></pre><p>A <a
href="/files/clickable_block/">clickable div demo</a> is of course available.</p><h2>How it works</h2><ul><li>When the div (or other tag, you choose) is clicked, find the <strong>first anchor tag</strong>, get it&#8217;s href attribute, and go there. Relying on an actual link means you always have a fallback, so no cheating.</li><li>When <strong>javascript is disabled</strong>, it just falls back to a regular block, where only the links are clickable.</li><li>A class called &#8220;clickable&#8221; is set on the block to allow for <strong>javascript-specific styling</strong>, such as changing the cursor with cursor: pointer, something you don&#8217;t want to happen when the block isn&#8217;t clickable.</li><li>The changing background color on <strong>hover is done with	 CSS</strong>, which I think is fair, considering the small percentage of users using IE6. Changing background color isn&#8217;t a must feature.</li><li>Lastly, since we&#8217;re simulating a link here, it should show where the link is going. I&#8217;ve done this by setting the statusbar to the link location on hover, something that&#8217;s useful when it works (users can disable this in some browsers).</li></ul><p>Hope that little snippet is useful for someone out there, I think it&#8217;s a good example of good use of javascript.</p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:52:"http://friendlybit.com/js/make-a-div-clickable/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:2:"33";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:13;a:6:{s:4:"data";s:9:"         ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:59:"Why people skip newspapers and read news on the web instead";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:94:"http://friendlybit.com/modern-web/why-people-skip-newspapers-and-read-news-on-the-web-instead/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:103:"http://friendlybit.com/modern-web/why-people-skip-newspapers-and-read-news-on-the-web-instead/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 25 Jun 2009 20:44:12 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:10:"Modern web";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=494";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:392:"You can&#8217;t be involved with what&#8217;s happening on the internet without coming in contact with the &#8220;newspaper crisis&#8221; somehow. From a business perspective it&#8217;s simple really: Much fewer people buy newspapers (on paper) nowadays. Please note that this has very little to do with advertisement or business models, I&#8217;m talking about newspapers from the user [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:5446:"<p>You can&#8217;t be involved with what&#8217;s happening on the internet without coming in contact with the &#8220;newspaper crisis&#8221; somehow. From a business perspective it&#8217;s simple really: Much fewer people buy newspapers (on paper) nowadays. Please note that this has very little to do with advertisement or business models, I&#8217;m talking about newspapers from the user perspective here.</p><p>Internet is really a commodity nowadays. People process loads of  information on the web every day, and this of course affects how they expect newspapers to behave. Every time I hold a big newspaper in my hands I&#8217;m surprised at how inferior it is compared to reading news on the web.</p><h2>Newspapers have problems with references</h2><p>If I find an interesting news story on the front page, it&#8217;s a mess finding the full article in there. The references are done with page numbers, but with page numbers that are local to a certain part of the paper. &#8220;Culture, page 7&#8243;. And the culture part is stacked inside the part I&#8217;m reading, so I first have to find that one, then find the page numbers (which are removed from pages with ads), and then finally find the article I wanted.</p><p>The same is true for related articles. If I read an article I like, it&#8217;s quite likely that I want to read other articles on the same subject. Newspapers solve this today by placing similar articles close to each other, and hope that you see them. This is of course limited, and gets harder when pages sizes shrink.</p><p>Compare this with clicking a link on the web. If I find an interesting article teaser, I click it, and am instantly taken to the full article. If that article was indeed as interesting as the teaser suggested, I&#8217;m often presented with similar articles, from similar categories, and can click them to move there.</p><h2>Newspapers are slow</h2><p>Even the most frequently published papers are only distributed once per day. This simply means that papers can&#8217;t compete on speed, being first with a certain story. Even if you happen to get your hands on a story at the perfect time, a paper still have to be both printed, and distributed to people. This takes hours.</p><p>What&#8217;s worse, morning newspapers brand themselves as dealing with  &#8220;today&#8217;s news&#8221;, when in fact it&#8217;s the news from yesterday. This hasn&#8217;t been a problem before, since there was no faster way to get news. Now there is.</p><p>If speed is important to you, you can easily subscribe to news via e-mail, Twitter or RSS, and be instantly updated.</p><h2>Newspapers are static</h2><p>Articles in a newspaper are, once published, not possible to update and improve. They are left for the wind, even though there are inaccuracies or important clarifications to be made. Any conversation sparked won&#8217;t be there.</p><p>This is of course the strongest argument for internet news. A big article will be different if you look at it later the same day. Comments and updates based on feedback are able to improve articles considerably.</p><h2>Newspapers don&#8217;t have enough unique content</h2><p>Big parts of daily newspapers contain poor rewrites, or plain copies, of articles from elsewhere. The reasoning is probably that they are trying to be exhaustive, give a broad view of what has happened. Problem is, they are hiding their own unique content behind loads of reposts of other&#8217;s content.</p><p>The same happens on the web, but instead of copying the article you link to it. Then you get to read the news from the real source, and dig in deeper if you want to. Additionally, there&#8217;s safegards that stop people from copying other people&#8217;s content. For instance, Google have special filters for filtering out duplicate content.</p><h2>Newspapers are not relevant enough</h2><p>The biggest reason why I don&#8217;t subscribe to any newspapers is that they are not relevant enough. I&#8217;m not one bit interested in sports, and still, during big sporting events newspapers push them to the front page, over interesting internet-related news; things I find interesting.</p><p>The key here is of course to realize that relevancy is in the eye of the beholder. Only <em>I</em> know what I find interesting, and relevant. Why trust someone else&#8217;s relevancy ranking when I can easily get my own ranking online? Even if I don&#8217;t want to tailor-pick RSS feeds and build my own custom news feed, there&#8217;s someone out there that has more similar taste than the four major newspapers here.</p><h2>So, what should newspapers do?</h2><p>Well, they have two options: <strong>One</strong>, they could keep writing articles, hoping that the quality will be high enough to turn the trend, or <strong>Two</strong>, they could start thinking of <strong>how</strong> they deliver news. The expectation of how news should be served is changing. It now needs to be delivered&#8230;</p><ol><li>&#8230; filled with references for digging deeper</li><li>&#8230; faster than once a day</li><li>&#8230; in a manner where people&#8217;s contributions enhance it</li><li>&#8230; with a quality stamp that ensures that you&#8217;re reading something you couldn&#8217;t get anywhere else</li><li>&#8230; personalized to my own specific taste. No sports.</li></ol><p>Is there any other way to do this than focusing aggressively on the web, and less on dead trees?</p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:99:"http://friendlybit.com/modern-web/why-people-skip-newspapers-and-read-news-on-the-web-instead/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:2:"19";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:14;a:6:{s:4:"data";s:9:"         ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:5:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:41:"Swedish: Presentation om upplevelsedesign";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:73:"http://friendlybit.com/tutorial/swedish-presentation-om-upplevelsedesign/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:82:"http://friendlybit.com/tutorial/swedish-presentation-om-upplevelsedesign/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 22 May 2009 11:33:18 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:5:"Tutor";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://friendlybit.com/?p=488";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:329:"Som många av er vet så jobbar jag för ett konsultbolag som heter Valtech i stockholm. Via Valtech får jag ofta möjlighet att hålla föredrag om saker jag tycker är intressanta, och som jag tycker att våra kunder (och vi själva), borde satsa mera på. Den här gången var det upplevelsedesign: att inte bara sätta [...]";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Emil Stenström";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:40:"http://purl.org/rss/1.0/modules/content/";a:1:{s:7:"encoded";a:1:{i:0;a:5:{s:4:"data";s:1127:"<p>Som många av er vet så jobbar jag för ett konsultbolag som heter Valtech i stockholm. Via Valtech får jag ofta möjlighet att hålla föredrag om saker jag tycker är intressanta, och som jag tycker att våra kunder (och vi själva), borde satsa mera på. Den här gången var det upplevelsedesign: att inte bara sätta fokus på att användaren ska klara av specifika uppgifter, utan att bry sig om hur det känns att genomföra de uppgifterna. Kort sagt, att sikta lite högre.</p><p>Presentationen håller jag tillsammans med Visar, och Marwin, två av våra extremt duktiga Art Directors, och ni ser mig sist i presentationen.</p><p><object
classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="437" height="288" id="viddler_51c3e438"><param
name="movie" value="http://www.viddler.com/player/51c3e438/" /><param
name="allowScriptAccess" value="always" /><param
name="allowFullScreen" value="true" /><embed
src="http://www.viddler.com/player/51c3e438/" width="437" height="288" type="application/x-shockwave-flash" allowScriptAccess="always" allowFullScreen="true" name="viddler_51c3e438"></embed></object></p> ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:78:"http://friendlybit.com/tutorial/swedish-presentation-om-upplevelsedesign/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"href";s:28:"http://friendlybit.com/feed/";s:3:"rel";s:4:"self";s:4:"type";s:19:"application/rss+xml";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:44:"http://purl.org/rss/1.0/modules/syndication/";a:2:{s:12:"updatePeriod";a:1:{i:0;a:5:{s:4:"data";s:6:"hourly";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:15:"updateFrequency";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}}}}}}s:4:"type";i:128;s:7:"headers";a:12:{s:4:"date";s:29:"Fri, 18 Feb 2011 09:45:40 GMT";s:6:"server";s:166:"Apache/2.2.17 (Unix) mod_ssl/2.2.17 OpenSSL/0.9.8e-fips-rhel5 mod_fcgid/2.3.5 Phusion_Passenger/2.2.15 mod_auth_passthrough/2.1 mod_bwlimited/1.4 FrontPage/5.0.2.2635";s:4:"vary";s:22:"Accept-Encoding,Cookie";s:13:"last-modified";s:29:"Fri, 18 Feb 2011 08:40:02 GMT";s:13:"accept-ranges";s:5:"bytes";s:14:"content-length";s:5:"23485";s:13:"cache-control";s:9:"max-age=0";s:7:"expires";s:29:"Fri, 18 Feb 2011 09:45:40 GMT";s:10:"x-pingback";s:33:"http://friendlybit.com/xmlrpc.php";s:12:"x-powered-by";s:22:"W3 Total Cache/0.9.1.3";s:12:"content-type";s:24:"text/html; charset=UTF-8";s:16:"content-encoding";s:4:"gzip";}s:5:"build";s:14:"20110128231735";}